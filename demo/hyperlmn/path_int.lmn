/* 
 * Closed path search in LMNtal(lmn-int)
 * Author: Seiji OGAWA, 2011-03-31
 * 
 * Examples are taken from:
 *   http://dtai.cs.kuleuven.be/CHR/examples.shtml
 *
 * If you'd like to change parameter N, 
 * please change the 1st argument of i("N", 0).
 *
 */

{

  {
    i(5, 0).
    
    list = [].
    i(M, I), list = H :- I < M, I1 = I+1 | i(M, I1), list = [e(I1) | H].
    i(M1, M2) :- M1 =:= M2 | j.
    j, list = [e(HX), e(HY), e(HZ) | R] :- 
        int(HX), int(HY), int(HZ) | 
        edge(HX, HY), e1(HY, HZ), e2(HZ, HX), l = [e(HY), e(HZ) | R], f(HX).
    l = [e(HX), e(HY), e(HZ) | R] :- 
        int(HX), int(HY), int(HZ) |
        edge(HX, HY), e1(HY, HZ), e2(HZ, HX), l = [e(HY), e(HZ) | R].
    l = [e(HX), e(HY)], f(HZ) :- 
    int(HX), int(HY), int(HZ) | edge(HX, HY), e1(HY, HZ), e2(HZ, HX).
    e1(X,Y,Z) :- edge(X,Y,Z).
    e2(X,Y,Z) :- edge(X,Y,Z).

  }.
  {$p, @p}/ :- $p, '$callback'(gettime, start).

  findcycle @@ edge(X1, Y1), edge(Y2, Z1), edge(Z2, X2) :- 
      X1 =:= X2, Y1 =:= Y2, Z1 =:= Z2 | cycle(X1, Y1, Z1).

}.
{start(S), $p[], @p}/ :- float(S) | start(S), '$callback'(gettime, end).
end(E), start(S) :- T = E-.S | time(T).
